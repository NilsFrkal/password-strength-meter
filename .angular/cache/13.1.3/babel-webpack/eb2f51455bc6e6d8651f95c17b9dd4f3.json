{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"angular-password-strength-meter\";\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.userForm = this.fb.group({\n        fullname: ['', Validators.required],\n        email: ['', [Validators.required, Validators.pattern('[^ @]*@[^ @]*')]],\n        password: ['', Validators.required]\n      });\n    }\n\n    get fullname() {\n      return this.userForm.get('fullname');\n    }\n\n    get email() {\n      return this.userForm.get('email');\n    }\n\n    get password() {\n      return this.userForm.get('password');\n    }\n\n    onPasswordStrengthChanged(strength) {\n      console.log('====================================');\n      console.log('onPasswordStrengthChanged', strength);\n      console.log('====================================');\n    }\n\n    onSubmit() {\n      if (this.userForm.valid) {\n        console.log('====================================');\n        console.log('userForm', this.userForm);\n        console.log('====================================');\n      } else {\n        console.log('====================================');\n        console.log('Invalid Form');\n        console.log('====================================');\n        Object.keys(this.userForm.controls).forEach(key => {\n          this.userForm.get(key).markAsDirty();\n        });\n      }\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 36,\n    vars: 12,\n    consts: [[\"novalidate\", \"\", 1, \"form-signup\", \"needs-validation\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mb-4\"], [1, \"h3\", \"mb-3\", \"font-weight-normal\"], [\"href\", \"https://github.com/dropbox/zxcvbn\"], [1, \"form-label-group\"], [\"type\", \"text\", \"id\", \"inputFullname\", \"placeholder\", \"Fullname\", \"formControlName\", \"fullname\", \"autocomplete\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"inputFullname\"], [1, \"invalid-feedback\"], [\"type\", \"text\", \"id\", \"inputEmail\", \"placeholder\", \"Email address\", \"formControlName\", \"email\", \"autocomplete\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"inputEmail\"], [\"type\", \"password\", \"id\", \"inputPassword\", \"placeholder\", \"Password\", \"aria-describedby\", \"passwordHelpBlock\", \"formControlName\", \"password\", \"autocomplete\", \"current-password\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"inputPassword\"], [3, \"password\", \"enableFeedback\", \"strengthChange\"], [\"id\", \"passwordHelpBlock\", 1, \"form-text\", \"text-muted\"], [1, \"checkbox\", \"mb-3\"], [\"type\", \"checkbox\", \"value\", \"remember-me\"], [\"id\", \"btn-submit\", \"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"btn-block\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Password Strength Meter - Demo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵtext(5, \"To display the strength of the password with a visual feedback. PasswordStrengthMeter use \");\n        i0.ɵɵelementStart(6, \"a\", 3);\n        i0.ɵɵtext(7, \"zxcvbn\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \" to estimate the strength of the password and also provide a visual feedback with suggestions and warning messages. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4);\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementStart(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Fullname\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 7);\n        i0.ɵɵtext(14, \" Please provide a Fullname. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 4);\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵelementStart(17, \"label\", 9);\n        i0.ɵɵtext(18, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 7);\n        i0.ɵɵtext(20, \" Please provide a email. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 4);\n        i0.ɵɵelement(22, \"input\", 10);\n        i0.ɵɵelementStart(23, \"label\", 11);\n        i0.ɵɵtext(24, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"password-strength-meter\", 12);\n        i0.ɵɵlistener(\"strengthChange\", function AppComponent_Template_password_strength_meter_strengthChange_25_listener($event) {\n          return ctx.onPasswordStrengthChanged($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"small\", 13);\n        i0.ɵɵtext(27, \" Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 7);\n        i0.ɵɵtext(29, \" Please provide a valid Password. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 14);\n        i0.ɵɵelementStart(31, \"label\");\n        i0.ɵɵelement(32, \"input\", 15);\n        i0.ɵɵtext(33, \" Remember me \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"button\", 16);\n        i0.ɵɵtext(35, \"Sign up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.fullname.invalid && (ctx.fullname.dirty || ctx.fullname.touched)));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.email.invalid && (ctx.email.dirty || ctx.email.touched)));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.password.invalid && (ctx.password.dirty || ctx.password.touched)));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"password\", ctx.password.value)(\"enableFeedback\", true);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i2.NgClass, i3.PasswordStrengthMeterComponent],\n    styles: [\".form-signup[_ngcontent-%COMP%]{width:100%;max-width:420px;padding:15px;margin:auto}.form-control[_ngcontent-%COMP%]{height:auto!important}.form-label-group[_ngcontent-%COMP%]{position:relative;margin-bottom:1rem}.form-label-group[_ngcontent-%COMP%] > input[_ngcontent-%COMP%], .form-label-group[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]{padding:var(--input-padding-y) var(--input-padding-x)}.form-label-group[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]{position:absolute;top:0;left:0;display:block;width:100%;margin-bottom:0;line-height:1.5;color:#495057;border:1px solid transparent;border-radius:.25rem;transition:all .1s ease-in-out}.form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:transparent}.form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::placeholder{color:transparent}.form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:-moz-placeholder-shown){padding-top:calc(var(--input-padding-y) + var(--input-padding-y) * .6666666667);padding-bottom:calc(var(--input-padding-y) / 3)}.form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:placeholder-shown){padding-top:calc(var(--input-padding-y) + var(--input-padding-y) * .6666666667);padding-bottom:calc(var(--input-padding-y) / 3)}.form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:-moz-placeholder-shown) ~ label[_ngcontent-%COMP%]{padding-top:calc(var(--input-padding-y) / 3);padding-bottom:calc(var(--input-padding-y) / 3);font-size:12px;color:#777}.form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:placeholder-shown) ~ label[_ngcontent-%COMP%]{padding-top:calc(var(--input-padding-y) / 3);padding-bottom:calc(var(--input-padding-y) / 3);font-size:12px;color:#777}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}