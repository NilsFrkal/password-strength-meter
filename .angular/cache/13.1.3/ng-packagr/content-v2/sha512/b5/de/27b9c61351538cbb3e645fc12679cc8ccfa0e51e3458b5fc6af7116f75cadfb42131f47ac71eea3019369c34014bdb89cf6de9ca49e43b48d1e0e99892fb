{"hash":"bdf7ef60d9aaecd458e250f4f163ee7f6a448d25","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { zxcvbn } from 'zxcvbn3';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass PasswordStrengthMeterService {\r\n    constructor() { }\r\n    /**\r\n     *  this will return the password strength score in number\r\n     *  0 - too guessable\r\n     *  1 - very guessable\r\n     *  2 - somewhat guessable\r\n     *  3 - safely unguessable\r\n     *  4 - very unguessable\r\n     *\r\n     *  @param password - Password\r\n     */\r\n    score(password) {\r\n        const result = zxcvbn(password);\r\n        return result.score;\r\n    }\r\n    /**\r\n     * this will return the password strength score with feedback messages\r\n     * return type { score: number; feedback: { suggestions: string[]; warning: string } }\r\n     *\r\n     * @param password - Password\r\n     */\r\n    scoreWithFeedback(password) {\r\n        const result = zxcvbn(password);\r\n        return { score: result.score, feedback: result.feedback };\r\n    }\r\n}\r\nPasswordStrengthMeterService.ɵfac = function PasswordStrengthMeterService_Factory(t) { return new (t || PasswordStrengthMeterService)(); };\r\nPasswordStrengthMeterService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PasswordStrengthMeterService, factory: PasswordStrengthMeterService.ɵfac });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PasswordStrengthMeterService, [{\r\n        type: Injectable\r\n    }], function () { return []; }, null); })();\n\nfunction PasswordStrengthMeterComponent_ng_container_3_small_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"small\", 5);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.feedback.warning, \" \");\r\n} }\r\nfunction PasswordStrengthMeterComponent_ng_container_3_small_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainerStart(0);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const suggetion_r4 = ctx.$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(suggetion_r4);\r\n} }\r\nfunction PasswordStrengthMeterComponent_ng_container_3_small_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"small\", 6);\r\n    i0.ɵɵtemplate(1, PasswordStrengthMeterComponent_ng_container_3_small_2_ng_container_1_Template, 2, 1, \"ng-container\", 7);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r2 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.feedback.suggestions);\r\n} }\r\nfunction PasswordStrengthMeterComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainerStart(0);\r\n    i0.ɵɵtemplate(1, PasswordStrengthMeterComponent_ng_container_3_small_1_Template, 2, 1, \"small\", 3);\r\n    i0.ɵɵtemplate(2, PasswordStrengthMeterComponent_ng_container_3_small_2_Template, 2, 1, \"small\", 4);\r\n    i0.ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.feedback.warning);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.feedback.suggestions && ctx_r0.feedback.suggestions.length > 0);\r\n} }\r\nclass PasswordStrengthMeterComponent {\r\n    constructor(passwordStrengthMeterService) {\r\n        this.passwordStrengthMeterService = passwordStrengthMeterService;\r\n        this.minPasswordLength = 8;\r\n        this.enableFeedback = false;\r\n        this.colors = [];\r\n        this.strengthChange = new EventEmitter();\r\n        this.passwordStrength = null;\r\n        this.feedback = null;\r\n        this.prevPasswordStrength = null;\r\n        this.defaultColours = [\r\n            'darkred',\r\n            'orangered',\r\n            'orange',\r\n            'yellowgreen',\r\n            'green'\r\n        ];\r\n    }\r\n    ngOnInit() { }\r\n    ngOnChanges(changes) {\r\n        if (changes.password) {\r\n            this.calculatePasswordStrength();\r\n        }\r\n    }\r\n    calculatePasswordStrength() {\r\n        // TODO validation logic optimization\r\n        if (!this.password) {\r\n            this.passwordStrength = null;\r\n            this.feedback = null;\r\n        }\r\n        else if (this.password && this.password.length < this.minPasswordLength) {\r\n            this.passwordStrength = 0;\r\n            this.feedback = null;\r\n        }\r\n        else {\r\n            if (this.enableFeedback) {\r\n                const result = this.passwordStrengthMeterService.scoreWithFeedback(this.password);\r\n                this.passwordStrength = result.score;\r\n                this.feedback = result.feedback;\r\n            }\r\n            else {\r\n                this.passwordStrength = this.passwordStrengthMeterService.score(this.password);\r\n                this.feedback = null;\r\n            }\r\n        }\r\n        // Only emit the passwordStrength if it changed\r\n        if (this.prevPasswordStrength !== this.passwordStrength) {\r\n            this.strengthChange.emit(this.passwordStrength);\r\n            this.prevPasswordStrength = this.passwordStrength;\r\n        }\r\n    }\r\n    getMeterFillColor(strength) {\r\n        if (!strength || strength < 0 || strength > 5) {\r\n            return this.colors[0] ? this.colors[0] : this.defaultColours[0];\r\n        }\r\n        return this.colors[strength]\r\n            ? this.colors[strength]\r\n            : this.defaultColours[strength];\r\n    }\r\n}\r\nPasswordStrengthMeterComponent.ɵfac = function PasswordStrengthMeterComponent_Factory(t) { return new (t || PasswordStrengthMeterComponent)(i0.ɵɵdirectiveInject(PasswordStrengthMeterService)); };\r\nPasswordStrengthMeterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PasswordStrengthMeterComponent, selectors: [[\"password-strength-meter\"]], inputs: { password: \"password\", minPasswordLength: \"minPasswordLength\", enableFeedback: \"enableFeedback\", colors: \"colors\" }, outputs: { strengthChange: \"strengthChange\" }, features: [i0.ɵɵProvidersFeature([PasswordStrengthMeterService]), i0.ɵɵNgOnChangesFeature], decls: 4, vars: 4, consts: [[1, \"strength-meter\"], [1, \"strength-meter-fill\"], [4, \"ngIf\"], [\"class\", \"password-feedback\", 4, \"ngIf\"], [\"class\", \"password-suggetion\", 4, \"ngIf\"], [1, \"password-feedback\"], [1, \"password-suggetion\"], [4, \"ngFor\", \"ngForOf\"]], template: function PasswordStrengthMeterComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\");\r\n        i0.ɵɵelementStart(1, \"div\", 0);\r\n        i0.ɵɵelement(2, \"div\", 1);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(3, PasswordStrengthMeterComponent_ng_container_3_Template, 3, 2, \"ng-container\", 2);\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵstyleProp(\"background\", ctx.getMeterFillColor(ctx.passwordStrength));\r\n        i0.ɵɵattribute(\"data-strength\", ctx.passwordStrength);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.enableFeedback && ctx.feedback);\r\n    } }, directives: [i2.NgIf, i2.NgForOf], styles: [\"*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]:before, *[_ngcontent-%COMP%]:after{box-sizing:border-box}.strength-meter[_ngcontent-%COMP%]{position:relative;height:3px;background:#ddd;margin:10px auto;border-radius:3px}.strength-meter[_ngcontent-%COMP%]:before, .strength-meter[_ngcontent-%COMP%]:after{content:\\\"\\\";height:inherit;background:transparent;display:block;border-color:#fff;border-style:solid;border-width:0 5px 0 5px;position:absolute;width:calc((100% - 20px)/5 + 10px);z-index:10}.strength-meter[_ngcontent-%COMP%]:before{left:calc((100% - 20px)/5)}.strength-meter[_ngcontent-%COMP%]:after{right:calc((100% - 20px)/5)}.strength-meter-fill[_ngcontent-%COMP%]{background:transparent;height:inherit;position:absolute;width:0;border-radius:inherit;transition:width .5s ease-in-out,background .25s}.strength-meter-fill[data-strength=\\\"0\\\"][_ngcontent-%COMP%]{background:darkred;width:20%}.strength-meter-fill[data-strength=\\\"1\\\"][_ngcontent-%COMP%]{background:orangered;width:40%}.strength-meter-fill[data-strength=\\\"2\\\"][_ngcontent-%COMP%]{background:orange;width:60%}.strength-meter-fill[data-strength=\\\"3\\\"][_ngcontent-%COMP%]{background:yellowgreen;width:80%}.strength-meter-fill[data-strength=\\\"4\\\"][_ngcontent-%COMP%]{background:green;width:100%}.password-feedback[_ngcontent-%COMP%], .password-suggetion[_ngcontent-%COMP%]{font-size:70%;font-weight:400;color:#6c757d!important;display:block;margin-top:.25rem}\"] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PasswordStrengthMeterComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'password-strength-meter', providers: [PasswordStrengthMeterService], template: \"<div>\\r\\n  <div class=\\\"strength-meter\\\">\\r\\n    <div class=\\\"strength-meter-fill\\\" [style.background]=\\\"getMeterFillColor(passwordStrength)\\\" [attr.data-strength]=\\\"passwordStrength\\\"></div>\\r\\n  </div>\\r\\n  <ng-container *ngIf=\\\"enableFeedback && feedback\\\">\\r\\n    <small class=\\\"password-feedback\\\" *ngIf=\\\"feedback.warning\\\">\\r\\n      {{feedback.warning}}\\r\\n    </small>\\r\\n    <small class=\\\"password-suggetion\\\" *ngIf=\\\"feedback.suggestions && feedback.suggestions.length > 0\\\">\\r\\n      <ng-container *ngFor=\\\"let suggetion of feedback.suggestions\\\">{{suggetion}}</ng-container>\\r\\n    </small>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}.strength-meter{position:relative;height:3px;background:#ddd;margin:10px auto;border-radius:3px}.strength-meter:before,.strength-meter:after{content:\\\"\\\";height:inherit;background:transparent;display:block;border-color:#fff;border-style:solid;border-width:0 5px 0 5px;position:absolute;width:calc((100% - 20px)/5 + 10px);z-index:10}.strength-meter:before{left:calc((100% - 20px)/5)}.strength-meter:after{right:calc((100% - 20px)/5)}.strength-meter-fill{background:transparent;height:inherit;position:absolute;width:0;border-radius:inherit;transition:width .5s ease-in-out,background .25s}.strength-meter-fill[data-strength=\\\"0\\\"]{background:darkred;width:20%}.strength-meter-fill[data-strength=\\\"1\\\"]{background:orangered;width:40%}.strength-meter-fill[data-strength=\\\"2\\\"]{background:orange;width:60%}.strength-meter-fill[data-strength=\\\"3\\\"]{background:yellowgreen;width:80%}.strength-meter-fill[data-strength=\\\"4\\\"]{background:green;width:100%}.password-feedback,.password-suggetion{font-size:70%;font-weight:400;color:#6c757d!important;display:block;margin-top:.25rem}\\n\"] }]\r\n    }], function () { return [{ type: PasswordStrengthMeterService }]; }, { password: [{\r\n            type: Input\r\n        }], minPasswordLength: [{\r\n            type: Input\r\n        }], enableFeedback: [{\r\n            type: Input\r\n        }], colors: [{\r\n            type: Input\r\n        }], strengthChange: [{\r\n            type: Output\r\n        }] }); })();\n\nclass PasswordStrengthMeterModule {\r\n}\r\nPasswordStrengthMeterModule.ɵfac = function PasswordStrengthMeterModule_Factory(t) { return new (t || PasswordStrengthMeterModule)(); };\r\nPasswordStrengthMeterModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PasswordStrengthMeterModule });\r\nPasswordStrengthMeterModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[CommonModule]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PasswordStrengthMeterModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [CommonModule],\r\n                declarations: [PasswordStrengthMeterComponent],\r\n                exports: [PasswordStrengthMeterComponent]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PasswordStrengthMeterModule, { declarations: [PasswordStrengthMeterComponent], imports: [CommonModule], exports: [PasswordStrengthMeterComponent] }); })();\n\n/*\r\n * Public API Surface of password-strength-meter\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { PasswordStrengthMeterComponent, PasswordStrengthMeterModule, PasswordStrengthMeterService };\n//# sourceMappingURL=angular-password-strength-meter.mjs.map\n","map":{"version":3,"file":"angular-password-strength-meter.mjs","sources":["../../../projects/password-strength-meter/src/lib/password-strength-meter.service.ts","../../../projects/password-strength-meter/src/lib/password-strength-meter.component.html","../../../projects/password-strength-meter/src/lib/password-strength-meter.component.ts","../../../projects/password-strength-meter/src/lib/password-strength-meter.module.ts","../../../projects/password-strength-meter/src/public-api.ts","../../../projects/password-strength-meter/src/angular-password-strength-meter.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { zxcvbn } from 'zxcvbn3';\r\n\r\n@Injectable()\r\nexport class PasswordStrengthMeterService {\r\n  constructor() {}\r\n\r\n  /**\r\n   *  this will return the password strength score in number\r\n   *  0 - too guessable\r\n   *  1 - very guessable\r\n   *  2 - somewhat guessable\r\n   *  3 - safely unguessable\r\n   *  4 - very unguessable\r\n   *\r\n   *  @param password - Password\r\n   */\r\n  score(password): number {\r\n    const result = zxcvbn(password);\r\n    return result.score;\r\n  }\r\n\r\n  /**\r\n   * this will return the password strength score with feedback messages\r\n   * return type { score: number; feedback: { suggestions: string[]; warning: string } }\r\n   *\r\n   * @param password - Password\r\n   */\r\n  scoreWithFeedback(\r\n    password\r\n  ): { score: number; feedback: { suggestions: string[]; warning: string } } {\r\n    const result = zxcvbn(password);\r\n    return { score: result.score, feedback: result.feedback };\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"strength-meter\">\r\n    <div class=\"strength-meter-fill\" [style.background]=\"getMeterFillColor(passwordStrength)\" [attr.data-strength]=\"passwordStrength\"></div>\r\n  </div>\r\n  <ng-container *ngIf=\"enableFeedback && feedback\">\r\n    <small class=\"password-feedback\" *ngIf=\"feedback.warning\">\r\n      {{feedback.warning}}\r\n    </small>\r\n    <small class=\"password-suggetion\" *ngIf=\"feedback.suggestions && feedback.suggestions.length > 0\">\r\n      <ng-container *ngFor=\"let suggetion of feedback.suggestions\">{{suggetion}}</ng-container>\r\n    </small>\r\n  </ng-container>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { PasswordStrengthMeterService } from './password-strength-meter.service';\r\n\r\n@Component({\r\n  selector: 'password-strength-meter',\r\n  templateUrl: './password-strength-meter.component.html',\r\n  styleUrls: ['./password-strength-meter.component.scss'],\r\n  providers: [PasswordStrengthMeterService]\r\n})\r\nexport class PasswordStrengthMeterComponent implements OnInit, OnChanges {\r\n  @Input() password: string;\r\n\r\n  @Input() minPasswordLength = 8;\r\n\r\n  @Input() enableFeedback = false;\r\n\r\n  @Input() colors: string[] = [];\r\n\r\n  @Output() strengthChange = new EventEmitter<number>();\r\n\r\n  passwordStrength: number = null;\r\n\r\n  feedback: { suggestions: string[]; warning: string } = null;\r\n\r\n  private prevPasswordStrength = null;\r\n\r\n  private defaultColours = [\r\n    'darkred',\r\n    'orangered',\r\n    'orange',\r\n    'yellowgreen',\r\n    'green'\r\n  ];\r\n\r\n  constructor(\r\n    private passwordStrengthMeterService: PasswordStrengthMeterService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.password) {\r\n      this.calculatePasswordStrength();\r\n    }\r\n  }\r\n\r\n  private calculatePasswordStrength() {\r\n    // TODO validation logic optimization\r\n    if (!this.password) {\r\n      this.passwordStrength = null;\r\n      this.feedback = null;\r\n    } else if (this.password && this.password.length < this.minPasswordLength) {\r\n      this.passwordStrength = 0;\r\n      this.feedback = null;\r\n    } else {\r\n      if (this.enableFeedback) {\r\n        const result = this.passwordStrengthMeterService.scoreWithFeedback(\r\n          this.password\r\n        );\r\n        this.passwordStrength = result.score;\r\n        this.feedback = result.feedback;\r\n      } else {\r\n        this.passwordStrength = this.passwordStrengthMeterService.score(\r\n          this.password\r\n        );\r\n        this.feedback = null;\r\n      }\r\n    }\r\n\r\n    // Only emit the passwordStrength if it changed\r\n    if (this.prevPasswordStrength !== this.passwordStrength) {\r\n      this.strengthChange.emit(this.passwordStrength);\r\n      this.prevPasswordStrength = this.passwordStrength;\r\n    }\r\n  }\r\n\r\n  getMeterFillColor(strength) {\r\n    if (!strength || strength < 0 || strength > 5) {\r\n      return this.colors[0] ? this.colors[0] : this.defaultColours[0];\r\n    }\r\n\r\n    return this.colors[strength]\r\n      ? this.colors[strength]\r\n      : this.defaultColours[strength];\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PasswordStrengthMeterComponent } from './password-strength-meter.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PasswordStrengthMeterComponent],\r\n  exports: [PasswordStrengthMeterComponent]\r\n})\r\nexport class PasswordStrengthMeterModule {}\r\n","/*\r\n * Public API Surface of password-strength-meter\r\n */\r\n\r\nexport * from './lib/password-strength-meter.service';\r\nexport * from './lib/password-strength-meter.component';\r\nexport * from './lib/password-strength-meter.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { zxcvbn } from 'zxcvbn3';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass PasswordStrengthMeterService {\r\n    constructor() { }\r\n    /**\r\n     *  this will return the password strength score in number\r\n     *  0 - too guessable\r\n     *  1 - very guessable\r\n     *  2 - somewhat guessable\r\n     *  3 - safely unguessable\r\n     *  4 - very unguessable\r\n     *\r\n     *  @param password - Password\r\n     */\r\n    score(password) {\r\n        const result = zxcvbn(password);\r\n        return result.score;\r\n    }\r\n    /**\r\n     * this will return the password strength score with feedback messages\r\n     * return type { score: number; feedback: { suggestions: string[]; warning: string } }\r\n     *\r\n     * @param password - Password\r\n     */\r\n    scoreWithFeedback(password) {\r\n        const result = zxcvbn(password);\r\n        return { score: result.score, feedback: result.feedback };\r\n    }\r\n}\r\nPasswordStrengthMeterService.ɵfac = function PasswordStrengthMeterService_Factory(t) { return new (t || PasswordStrengthMeterService)(); };\r\nPasswordStrengthMeterService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PasswordStrengthMeterService, factory: PasswordStrengthMeterService.ɵfac });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PasswordStrengthMeterService, [{\r\n            type: Injectable\r\n        }], function () { return []; }, null);\r\n})();\n\nfunction PasswordStrengthMeterComponent_ng_container_3_small_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"small\", 5);\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext(2);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate1(\" \", ctx_r1.feedback.warning, \" \");\r\n    }\r\n}\r\nfunction PasswordStrengthMeterComponent_ng_container_3_small_2_ng_container_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementContainerStart(0);\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementContainerEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const suggetion_r4 = ctx.$implicit;\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate(suggetion_r4);\r\n    }\r\n}\r\nfunction PasswordStrengthMeterComponent_ng_container_3_small_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"small\", 6);\r\n        i0.ɵɵtemplate(1, PasswordStrengthMeterComponent_ng_container_3_small_2_ng_container_1_Template, 2, 1, \"ng-container\", 7);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r2 = i0.ɵɵnextContext(2);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx_r2.feedback.suggestions);\r\n    }\r\n}\r\nfunction PasswordStrengthMeterComponent_ng_container_3_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementContainerStart(0);\r\n        i0.ɵɵtemplate(1, PasswordStrengthMeterComponent_ng_container_3_small_1_Template, 2, 1, \"small\", 3);\r\n        i0.ɵɵtemplate(2, PasswordStrengthMeterComponent_ng_container_3_small_2_Template, 2, 1, \"small\", 4);\r\n        i0.ɵɵelementContainerEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx_r0.feedback.warning);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx_r0.feedback.suggestions && ctx_r0.feedback.suggestions.length > 0);\r\n    }\r\n}\r\nclass PasswordStrengthMeterComponent {\r\n    constructor(passwordStrengthMeterService) {\r\n        this.passwordStrengthMeterService = passwordStrengthMeterService;\r\n        this.minPasswordLength = 8;\r\n        this.enableFeedback = false;\r\n        this.colors = [];\r\n        this.strengthChange = new EventEmitter();\r\n        this.passwordStrength = null;\r\n        this.feedback = null;\r\n        this.prevPasswordStrength = null;\r\n        this.defaultColours = [\r\n            'darkred',\r\n            'orangered',\r\n            'orange',\r\n            'yellowgreen',\r\n            'green'\r\n        ];\r\n    }\r\n    ngOnInit() { }\r\n    ngOnChanges(changes) {\r\n        if (changes.password) {\r\n            this.calculatePasswordStrength();\r\n        }\r\n    }\r\n    calculatePasswordStrength() {\r\n        // TODO validation logic optimization\r\n        if (!this.password) {\r\n            this.passwordStrength = null;\r\n            this.feedback = null;\r\n        }\r\n        else if (this.password && this.password.length < this.minPasswordLength) {\r\n            this.passwordStrength = 0;\r\n            this.feedback = null;\r\n        }\r\n        else {\r\n            if (this.enableFeedback) {\r\n                const result = this.passwordStrengthMeterService.scoreWithFeedback(this.password);\r\n                this.passwordStrength = result.score;\r\n                this.feedback = result.feedback;\r\n            }\r\n            else {\r\n                this.passwordStrength = this.passwordStrengthMeterService.score(this.password);\r\n                this.feedback = null;\r\n            }\r\n        }\r\n        // Only emit the passwordStrength if it changed\r\n        if (this.prevPasswordStrength !== this.passwordStrength) {\r\n            this.strengthChange.emit(this.passwordStrength);\r\n            this.prevPasswordStrength = this.passwordStrength;\r\n        }\r\n    }\r\n    getMeterFillColor(strength) {\r\n        if (!strength || strength < 0 || strength > 5) {\r\n            return this.colors[0] ? this.colors[0] : this.defaultColours[0];\r\n        }\r\n        return this.colors[strength]\r\n            ? this.colors[strength]\r\n            : this.defaultColours[strength];\r\n    }\r\n}\r\nPasswordStrengthMeterComponent.ɵfac = function PasswordStrengthMeterComponent_Factory(t) { return new (t || PasswordStrengthMeterComponent)(i0.ɵɵdirectiveInject(PasswordStrengthMeterService)); };\r\nPasswordStrengthMeterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PasswordStrengthMeterComponent, selectors: [[\"password-strength-meter\"]], inputs: { password: \"password\", minPasswordLength: \"minPasswordLength\", enableFeedback: \"enableFeedback\", colors: \"colors\" }, outputs: { strengthChange: \"strengthChange\" }, features: [i0.ɵɵProvidersFeature([PasswordStrengthMeterService]), i0.ɵɵNgOnChangesFeature], decls: 4, vars: 4, consts: [[1, \"strength-meter\"], [1, \"strength-meter-fill\"], [4, \"ngIf\"], [\"class\", \"password-feedback\", 4, \"ngIf\"], [\"class\", \"password-suggetion\", 4, \"ngIf\"], [1, \"password-feedback\"], [1, \"password-suggetion\"], [4, \"ngFor\", \"ngForOf\"]], template: function PasswordStrengthMeterComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"div\");\r\n            i0.ɵɵelementStart(1, \"div\", 0);\r\n            i0.ɵɵelement(2, \"div\", 1);\r\n            i0.ɵɵelementEnd();\r\n            i0.ɵɵtemplate(3, PasswordStrengthMeterComponent_ng_container_3_Template, 3, 2, \"ng-container\", 2);\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵadvance(2);\r\n            i0.ɵɵstyleProp(\"background\", ctx.getMeterFillColor(ctx.passwordStrength));\r\n            i0.ɵɵattribute(\"data-strength\", ctx.passwordStrength);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.enableFeedback && ctx.feedback);\r\n        }\r\n    }, directives: [i2.NgIf, i2.NgForOf], styles: [\"*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]:before, *[_ngcontent-%COMP%]:after{box-sizing:border-box}.strength-meter[_ngcontent-%COMP%]{position:relative;height:3px;background:#ddd;margin:10px auto;border-radius:3px}.strength-meter[_ngcontent-%COMP%]:before, .strength-meter[_ngcontent-%COMP%]:after{content:\\\"\\\";height:inherit;background:transparent;display:block;border-color:#fff;border-style:solid;border-width:0 5px 0 5px;position:absolute;width:calc((100% - 20px)/5 + 10px);z-index:10}.strength-meter[_ngcontent-%COMP%]:before{left:calc((100% - 20px)/5)}.strength-meter[_ngcontent-%COMP%]:after{right:calc((100% - 20px)/5)}.strength-meter-fill[_ngcontent-%COMP%]{background:transparent;height:inherit;position:absolute;width:0;border-radius:inherit;transition:width .5s ease-in-out,background .25s}.strength-meter-fill[data-strength=\\\"0\\\"][_ngcontent-%COMP%]{background:darkred;width:20%}.strength-meter-fill[data-strength=\\\"1\\\"][_ngcontent-%COMP%]{background:orangered;width:40%}.strength-meter-fill[data-strength=\\\"2\\\"][_ngcontent-%COMP%]{background:orange;width:60%}.strength-meter-fill[data-strength=\\\"3\\\"][_ngcontent-%COMP%]{background:yellowgreen;width:80%}.strength-meter-fill[data-strength=\\\"4\\\"][_ngcontent-%COMP%]{background:green;width:100%}.password-feedback[_ngcontent-%COMP%], .password-suggetion[_ngcontent-%COMP%]{font-size:70%;font-weight:400;color:#6c757d!important;display:block;margin-top:.25rem}\"] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PasswordStrengthMeterComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'password-strength-meter', providers: [PasswordStrengthMeterService], template: \"<div>\\r\\n  <div class=\\\"strength-meter\\\">\\r\\n    <div class=\\\"strength-meter-fill\\\" [style.background]=\\\"getMeterFillColor(passwordStrength)\\\" [attr.data-strength]=\\\"passwordStrength\\\"></div>\\r\\n  </div>\\r\\n  <ng-container *ngIf=\\\"enableFeedback && feedback\\\">\\r\\n    <small class=\\\"password-feedback\\\" *ngIf=\\\"feedback.warning\\\">\\r\\n      {{feedback.warning}}\\r\\n    </small>\\r\\n    <small class=\\\"password-suggetion\\\" *ngIf=\\\"feedback.suggestions && feedback.suggestions.length > 0\\\">\\r\\n      <ng-container *ngFor=\\\"let suggetion of feedback.suggestions\\\">{{suggetion}}</ng-container>\\r\\n    </small>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}.strength-meter{position:relative;height:3px;background:#ddd;margin:10px auto;border-radius:3px}.strength-meter:before,.strength-meter:after{content:\\\"\\\";height:inherit;background:transparent;display:block;border-color:#fff;border-style:solid;border-width:0 5px 0 5px;position:absolute;width:calc((100% - 20px)/5 + 10px);z-index:10}.strength-meter:before{left:calc((100% - 20px)/5)}.strength-meter:after{right:calc((100% - 20px)/5)}.strength-meter-fill{background:transparent;height:inherit;position:absolute;width:0;border-radius:inherit;transition:width .5s ease-in-out,background .25s}.strength-meter-fill[data-strength=\\\"0\\\"]{background:darkred;width:20%}.strength-meter-fill[data-strength=\\\"1\\\"]{background:orangered;width:40%}.strength-meter-fill[data-strength=\\\"2\\\"]{background:orange;width:60%}.strength-meter-fill[data-strength=\\\"3\\\"]{background:yellowgreen;width:80%}.strength-meter-fill[data-strength=\\\"4\\\"]{background:green;width:100%}.password-feedback,.password-suggetion{font-size:70%;font-weight:400;color:#6c757d!important;display:block;margin-top:.25rem}\\n\"] }]\r\n        }], function () { return [{ type: PasswordStrengthMeterService }]; }, { password: [{\r\n                type: Input\r\n            }], minPasswordLength: [{\r\n                type: Input\r\n            }], enableFeedback: [{\r\n                type: Input\r\n            }], colors: [{\r\n                type: Input\r\n            }], strengthChange: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nclass PasswordStrengthMeterModule {\r\n}\r\nPasswordStrengthMeterModule.ɵfac = function PasswordStrengthMeterModule_Factory(t) { return new (t || PasswordStrengthMeterModule)(); };\r\nPasswordStrengthMeterModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PasswordStrengthMeterModule });\r\nPasswordStrengthMeterModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[CommonModule]] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PasswordStrengthMeterModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [PasswordStrengthMeterComponent],\r\n                    exports: [PasswordStrengthMeterComponent]\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PasswordStrengthMeterModule, { declarations: [PasswordStrengthMeterComponent], imports: [CommonModule], exports: [PasswordStrengthMeterComponent] }); })();\n\n/*\r\n * Public API Surface of password-strength-meter\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { PasswordStrengthMeterComponent, PasswordStrengthMeterModule, PasswordStrengthMeterService };\n//# sourceMappingURL=angular-password-strength-meter.mjs.map\n","map":{"version":3,"file":"angular-password-strength-meter.mjs","sources":["../../../projects/password-strength-meter/src/lib/password-strength-meter.service.ts","../../../projects/password-strength-meter/src/lib/password-strength-meter.component.html","../../../projects/password-strength-meter/src/lib/password-strength-meter.component.ts","../../../projects/password-strength-meter/src/lib/password-strength-meter.module.ts","../../../projects/password-strength-meter/src/public-api.ts","../../../projects/password-strength-meter/src/angular-password-strength-meter.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { zxcvbn } from 'zxcvbn3';\r\n\r\n@Injectable()\r\nexport class PasswordStrengthMeterService {\r\n  constructor() {}\r\n\r\n  /**\r\n   *  this will return the password strength score in number\r\n   *  0 - too guessable\r\n   *  1 - very guessable\r\n   *  2 - somewhat guessable\r\n   *  3 - safely unguessable\r\n   *  4 - very unguessable\r\n   *\r\n   *  @param password - Password\r\n   */\r\n  score(password): number {\r\n    const result = zxcvbn(password);\r\n    return result.score;\r\n  }\r\n\r\n  /**\r\n   * this will return the password strength score with feedback messages\r\n   * return type { score: number; feedback: { suggestions: string[]; warning: string } }\r\n   *\r\n   * @param password - Password\r\n   */\r\n  scoreWithFeedback(\r\n    password\r\n  ): { score: number; feedback: { suggestions: string[]; warning: string } } {\r\n    const result = zxcvbn(password);\r\n    return { score: result.score, feedback: result.feedback };\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"strength-meter\">\r\n    <div class=\"strength-meter-fill\" [style.background]=\"getMeterFillColor(passwordStrength)\" [attr.data-strength]=\"passwordStrength\"></div>\r\n  </div>\r\n  <ng-container *ngIf=\"enableFeedback && feedback\">\r\n    <small class=\"password-feedback\" *ngIf=\"feedback.warning\">\r\n      {{feedback.warning}}\r\n    </small>\r\n    <small class=\"password-suggetion\" *ngIf=\"feedback.suggestions && feedback.suggestions.length > 0\">\r\n      <ng-container *ngFor=\"let suggetion of feedback.suggestions\">{{suggetion}}</ng-container>\r\n    </small>\r\n  </ng-container>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { PasswordStrengthMeterService } from './password-strength-meter.service';\r\n\r\n@Component({\r\n  selector: 'password-strength-meter',\r\n  templateUrl: './password-strength-meter.component.html',\r\n  styleUrls: ['./password-strength-meter.component.scss'],\r\n  providers: [PasswordStrengthMeterService]\r\n})\r\nexport class PasswordStrengthMeterComponent implements OnInit, OnChanges {\r\n  @Input() password: string;\r\n\r\n  @Input() minPasswordLength = 8;\r\n\r\n  @Input() enableFeedback = false;\r\n\r\n  @Input() colors: string[] = [];\r\n\r\n  @Output() strengthChange = new EventEmitter<number>();\r\n\r\n  passwordStrength: number = null;\r\n\r\n  feedback: { suggestions: string[]; warning: string } = null;\r\n\r\n  private prevPasswordStrength = null;\r\n\r\n  private defaultColours = [\r\n    'darkred',\r\n    'orangered',\r\n    'orange',\r\n    'yellowgreen',\r\n    'green'\r\n  ];\r\n\r\n  constructor(\r\n    private passwordStrengthMeterService: PasswordStrengthMeterService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.password) {\r\n      this.calculatePasswordStrength();\r\n    }\r\n  }\r\n\r\n  private calculatePasswordStrength() {\r\n    // TODO validation logic optimization\r\n    if (!this.password) {\r\n      this.passwordStrength = null;\r\n      this.feedback = null;\r\n    } else if (this.password && this.password.length < this.minPasswordLength) {\r\n      this.passwordStrength = 0;\r\n      this.feedback = null;\r\n    } else {\r\n      if (this.enableFeedback) {\r\n        const result = this.passwordStrengthMeterService.scoreWithFeedback(\r\n          this.password\r\n        );\r\n        this.passwordStrength = result.score;\r\n        this.feedback = result.feedback;\r\n      } else {\r\n        this.passwordStrength = this.passwordStrengthMeterService.score(\r\n          this.password\r\n        );\r\n        this.feedback = null;\r\n      }\r\n    }\r\n\r\n    // Only emit the passwordStrength if it changed\r\n    if (this.prevPasswordStrength !== this.passwordStrength) {\r\n      this.strengthChange.emit(this.passwordStrength);\r\n      this.prevPasswordStrength = this.passwordStrength;\r\n    }\r\n  }\r\n\r\n  getMeterFillColor(strength) {\r\n    if (!strength || strength < 0 || strength > 5) {\r\n      return this.colors[0] ? this.colors[0] : this.defaultColours[0];\r\n    }\r\n\r\n    return this.colors[strength]\r\n      ? this.colors[strength]\r\n      : this.defaultColours[strength];\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PasswordStrengthMeterComponent } from './password-strength-meter.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PasswordStrengthMeterComponent],\r\n  exports: [PasswordStrengthMeterComponent]\r\n})\r\nexport class PasswordStrengthMeterModule {}\r\n","/*\r\n * Public API Surface of password-strength-meter\r\n */\r\n\r\nexport * from './lib/password-strength-meter.service';\r\nexport * from './lib/password-strength-meter.component';\r\nexport * from './lib/password-strength-meter.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}